<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Développement mobile on Baptiste Pesquet</title>
    <link>https://www.bpesquet.fr/fr/slides/mobile/</link>
    <description>Recent content in Développement mobile on Baptiste Pesquet</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://www.bpesquet.fr/fr/slides/mobile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Le langage JavaScript</title>
      <link>https://www.bpesquet.fr/fr/slides/mobile/javascript/</link>
      <pubDate>Mon, 16 Dec 2019 21:50:46 +0100</pubDate>
      
      <guid>https://www.bpesquet.fr/fr/slides/mobile/javascript/</guid>
      <description>Sommaire  Pourquoi JavaScript ? Syntaxe du langage Environnement de travail  Pourquoi JavaScript ? JavaScript is eating the world Un pré-requis essentiel La majorité des solutions mobiles multi-plateformes est basée sur JavaScript.
Un langage modernisé JavaScript est normalisé sous le nom ECMAScript.
La norme ES2015 (ou ES6) a apporté de très nombreuses améliorations au langage.
La syntaxe du langage Déclaration de variables JavaScript est un langage à typage dynamique.</description>
    </item>
    
    <item>
      <title>Introduction à React Native</title>
      <link>https://www.bpesquet.fr/fr/slides/mobile/intro-react-native/</link>
      <pubDate>Wed, 23 May 2018 23:34:24 +0200</pubDate>
      
      <guid>https://www.bpesquet.fr/fr/slides/mobile/intro-react-native/</guid>
      <description>Sommaire  L&amp;rsquo;écosystème mobile Premiers pas avec React Native Anatomie d&amp;rsquo;une application React Native  L&amp;rsquo;écosystème mobile Développement natif Création d&amp;rsquo;applications en utilisant la technologie prévue par le concepteur de l&amp;rsquo;OS.
 Android : Java IOS : Objective-C ou Swift  Ces technologies sont incompatibles. Avantages  Accès à l&amp;rsquo;intégralité des fonctionnalités matérielles et logicielles du terminal mobile. Performances optimales.  Inconvénient (majeur !) Nécessité de créer puis de faire évoluer une application pour chaque environnement.</description>
    </item>
    
    <item>
      <title>React Native : gestion de l&#39;UI</title>
      <link>https://www.bpesquet.fr/fr/slides/mobile/react-native-ui/</link>
      <pubDate>Tue, 07 Jan 2020 23:06:33 +0100</pubDate>
      
      <guid>https://www.bpesquet.fr/fr/slides/mobile/react-native-ui/</guid>
      <description>Sommaire  Cycle de vie d&amp;rsquo;un composant Style et positionnement Gestion de la navigation  Cycle de vie d&amp;rsquo;un composant Notion de cycle de vie Les composants RN suivent un cycle de vie bien défini composé d&amp;rsquo;étapes : montage, rendu, mise à jour, démontage et suppression.

Méthodes liées au cycle de vie Les redéfinir permet d&amp;rsquo;exécuter du code spécifique.
 constructor(props) : initialisation des propriétés et de l&amp;rsquo;état. render() : renvoi d&amp;rsquo;un élément React Native.</description>
    </item>
    
  </channel>
</rss>